Q1) 
An instance variable is instance-specific, meaning that all instances of a class have their own copies whereas a static variable is a class-level copy that is shared by all instances.
 
 
Q2) 

public static double CalcTax(double inc)
{
	double t; 
	
	if(inc<=7475)
		t=0;
	else if(inc<=42475)
		t=0.2*(inc-7475); 
	else
		t=0.2*(42475) + 0.4*(inc-42475);
	
	return t;
}

Q3) 

Q4) 

public static double geometricMean(int[] a)
{
	if(a.length<1)
		return 0; 
		
	double d=a[0];
	
	for(int n:a)
		d*=n;
	
	return Math.pow(d, 1.0/a.length);
}

Q6)
public static String first5(String s)
{
	return ( (s.length()<5)?s:s.substring(0,5) );
}

Q7)
public static double[] sum(double[] a, double[] b)
{
	if(a.length!=b.length)
		return null;

	double[] v=new double[a.length];
	
	for(int i=0;i<a.length;i++)
		v[i]=a[i]+b[i]; 

	return v;
}

Q8)

public class Account
{
	private static int lastNumber=0;
	private int number;
	private double balance;
	
	public Account()
	{
		number=lastNumber++; 
	}

	public int getAccountNumber()
	{
		return number;
	}
	
	public double getBalance()
	{
		return balance;
	}
	
	public boolean debit(double amount)
	{
		if(amount<0 || (balance-amount)<0)
			return false;
			
		balance-=amount;
		return true;
	}
	
	public boolean credit(double amount)
	{
		if(amount<0)	
			return false;
			
		balance+=amount;
		return true; 
	}
}


Q9)
(a) 

t1.var1=0
T12.var2=1

//t1: 0, 1
//t2: 1, 2

(b)
1. String name
2. System.out.print
3. ="John";

(c) Name of the method + Parameter types


Q10) 
(a) 
9, 9, 2
//fiddle(test,9)
1, 27, 2


(b)

1. String[] args
2. num=12;
3. System.out.print()
4. String 

(c)
[type] [identifier]; 
e.g int x; 

Q11) 

(b)

public static int[] splice(int[] v, int[] w)
{
	if(v.length!=w.length)
		return null;

	int[] vw= new int[v.length+w.length];
	
	for(int i=0, j=0, k=0; i<vw.length ; i++)
		if(i%2==1)
			vw[i]=v[j++];
		else	
			vw[i]=w[k++];
			
	return vw; 
}
































