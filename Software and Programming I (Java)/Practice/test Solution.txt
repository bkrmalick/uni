"(..."+ ( subject.length()<12 ? subject:subject.substring(0,12) )+"...)"


if (var <= 0) 
	if (var == -20) 
		System.out.print("A");
	else 
		System.out.print("B"); 
else 
	System.out.print("C");



Q5)

public static void printLongestRun(String[] v)
{
	int runStart=0, runEnd=0, maxRunStart=0, maxRunEnd=0;
	String prev=v[0];

	for(int i=1; i<v.length ; i++)
	{
		if(v[i].equals(prev))
			runEnd++;	
		if(!v[i].equals(prev) || i==v.length-1)
		{
			if((runEnd-runStart)>(maxRunEnd-maxRunStart))
			{
				maxRunEnd=runEnd;
				maxRunStart=runStart; 
			}
			runStart=runEnd=i;		
		}	

	}

	for(int i=0;i<maxRunStart;i++)
		System.out.print(v[i]+" ");		
	
	System.out.print("(");
	for(int i=maxRunStart ;i<=maxRunEnd;i++)
		System.out.print(v[i]+" ");

	System.out.print(")");

	for(int i=maxRunEnd+1; i<v.length;i++)
		System.out.print(V[i]+" "); 
}



Q8)

1. + super.toString()
2. public String toString()
3. var=20
4. no class being inherited from so cant use super
5. d==5

Q9)
public class CodedItem implements Item
{
	private String code;
	private double price;
	
	
	public CodedItem(String code, double price)
	{
		this.code=code;
		this.price=price;
	}
	
	public String getCode()
	{
		return code;
	}
	
	public double getPrice()
	{
		return price;
	}
	
	public String toString()
	{
		return "Coded Item - Code: "+code+", Price: "+price;
	}

}


public class WeightedItem implements Item
{
	private double pricePerKg, weight; 
	
	public WeightedItem(double pricePerKg, double weight)
	{
		this.pricePerKg=pricePerKg;
		this.weight=weight;
	}
	
	public double getPrice()
	{
		return weight*pricePerKg;
	}
	
	public double getPricePerKg()
	{
		return pricePerKg;
	}

	public double getWeight()
	{
		return weight;
	}	
	
	public String toString()
	{
		return "Weighted Item - weight: " +weight + ", Price Per Kg: "+pricePerKg; 
	}

}

public class Basket
{
	private Item[] items;
	private int count;
	private final int SIZE;
	
	public Basket()
	{	
		SIZE=10;
	
		items=new Item[SIZE];
	}
	
	public void addItem(Item item)
	{
		if(count<SIZE)
		{
			items[count++]=item;
		}
	}
	
	public int getCount()
	{
		return count;
	}
	
	public double getTotal()
	{
		double sum=0; 
		
		for(int i=0;i<count;i++)
			sum+=items[i].getPrice(); 
			
		return sum; 
	}

}